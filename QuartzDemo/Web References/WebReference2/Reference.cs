//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace QuartzDemo.WebReference2 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TaskWorkflowServiceVSSoapBinding", Namespace="http://localhost/zhbggx/services/TaskWorkflowService")]
    public partial class TaskWorkflowServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private System.Threading.SendOrPostCallback unReceiveTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskAttachmentsDownloadOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskRecevieConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskRollbackOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskBackupOperationCompleted;
        
        private System.Threading.SendOrPostCallback taskDealOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTaskUploadAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback startWorkFlowOperationCompleted;
        
        private System.Threading.SendOrPostCallback startWorfFlowUploadAttachmentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback startWorkflowSubmitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TaskWorkflowServiceService() {
            this.Url = global::QuartzDemo.Properties.Settings.Default.QuartzDemo_WebReference2_TaskWorkflowServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        public event unReceiveTasksCompletedEventHandler unReceiveTasksCompleted;
        
        /// <remarks/>
        public event taskDetailCompletedEventHandler taskDetailCompleted;
        
        /// <remarks/>
        public event taskAttachmentsDownloadCompletedEventHandler taskAttachmentsDownloadCompleted;
        
        /// <remarks/>
        public event taskRecevieConfirmCompletedEventHandler taskRecevieConfirmCompleted;
        
        /// <remarks/>
        public event taskRollbackCompletedEventHandler taskRollbackCompleted;
        
        /// <remarks/>
        public event taskBackupCompletedEventHandler taskBackupCompleted;
        
        /// <remarks/>
        public event taskDealCompletedEventHandler taskDealCompleted;
        
        /// <remarks/>
        public event receiveTasksCompletedEventHandler receiveTasksCompleted;
        
        /// <remarks/>
        public event submitTaskUploadAttachmentsCompletedEventHandler submitTaskUploadAttachmentsCompleted;
        
        /// <remarks/>
        public event submitTaskCompletedEventHandler submitTaskCompleted;
        
        /// <remarks/>
        public event startWorkFlowCompletedEventHandler startWorkFlowCompleted;
        
        /// <remarks/>
        public event startWorfFlowUploadAttachmentsCompletedEventHandler startWorfFlowUploadAttachmentsCompleted;
        
        /// <remarks/>
        public event startWorkflowSubmitCompletedEventHandler startWorkflowSubmitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("testReturn")]
        public string test(string xtbh) {
            object[] results = this.Invoke("test", new object[] {
                        xtbh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync(string xtbh) {
            this.testAsync(xtbh, null);
        }
        
        /// <remarks/>
        public void testAsync(string xtbh, object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[] {
                        xtbh}, this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("unReceiveTasksReturn")]
        public string unReceiveTasks(string xtbh) {
            object[] results = this.Invoke("unReceiveTasks", new object[] {
                        xtbh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void unReceiveTasksAsync(string xtbh) {
            this.unReceiveTasksAsync(xtbh, null);
        }
        
        /// <remarks/>
        public void unReceiveTasksAsync(string xtbh, object userState) {
            if ((this.unReceiveTasksOperationCompleted == null)) {
                this.unReceiveTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunReceiveTasksOperationCompleted);
            }
            this.InvokeAsync("unReceiveTasks", new object[] {
                        xtbh}, this.unReceiveTasksOperationCompleted, userState);
        }
        
        private void OnunReceiveTasksOperationCompleted(object arg) {
            if ((this.unReceiveTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unReceiveTasksCompleted(this, new unReceiveTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskDetailReturn")]
        public string taskDetail(string xtbh, string swbh, string swlx) {
            object[] results = this.Invoke("taskDetail", new object[] {
                        xtbh,
                        swbh,
                        swlx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskDetailAsync(string xtbh, string swbh, string swlx) {
            this.taskDetailAsync(xtbh, swbh, swlx, null);
        }
        
        /// <remarks/>
        public void taskDetailAsync(string xtbh, string swbh, string swlx, object userState) {
            if ((this.taskDetailOperationCompleted == null)) {
                this.taskDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskDetailOperationCompleted);
            }
            this.InvokeAsync("taskDetail", new object[] {
                        xtbh,
                        swbh,
                        swlx}, this.taskDetailOperationCompleted, userState);
        }
        
        private void OntaskDetailOperationCompleted(object arg) {
            if ((this.taskDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskDetailCompleted(this, new taskDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskAttachmentsDownloadReturn")]
        public string taskAttachmentsDownload(string xtbh, string swlx, string fjbh, long startpost, long length) {
            object[] results = this.Invoke("taskAttachmentsDownload", new object[] {
                        xtbh,
                        swlx,
                        fjbh,
                        startpost,
                        length});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskAttachmentsDownloadAsync(string xtbh, string swlx, string fjbh, long startpost, long length) {
            this.taskAttachmentsDownloadAsync(xtbh, swlx, fjbh, startpost, length, null);
        }
        
        /// <remarks/>
        public void taskAttachmentsDownloadAsync(string xtbh, string swlx, string fjbh, long startpost, long length, object userState) {
            if ((this.taskAttachmentsDownloadOperationCompleted == null)) {
                this.taskAttachmentsDownloadOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskAttachmentsDownloadOperationCompleted);
            }
            this.InvokeAsync("taskAttachmentsDownload", new object[] {
                        xtbh,
                        swlx,
                        fjbh,
                        startpost,
                        length}, this.taskAttachmentsDownloadOperationCompleted, userState);
        }
        
        private void OntaskAttachmentsDownloadOperationCompleted(object arg) {
            if ((this.taskAttachmentsDownloadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskAttachmentsDownloadCompleted(this, new taskAttachmentsDownloadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskRecevieConfirmReturn")]
        public string taskRecevieConfirm(string xtbh, string swbh, string swlx) {
            object[] results = this.Invoke("taskRecevieConfirm", new object[] {
                        xtbh,
                        swbh,
                        swlx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskRecevieConfirmAsync(string xtbh, string swbh, string swlx) {
            this.taskRecevieConfirmAsync(xtbh, swbh, swlx, null);
        }
        
        /// <remarks/>
        public void taskRecevieConfirmAsync(string xtbh, string swbh, string swlx, object userState) {
            if ((this.taskRecevieConfirmOperationCompleted == null)) {
                this.taskRecevieConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskRecevieConfirmOperationCompleted);
            }
            this.InvokeAsync("taskRecevieConfirm", new object[] {
                        xtbh,
                        swbh,
                        swlx}, this.taskRecevieConfirmOperationCompleted, userState);
        }
        
        private void OntaskRecevieConfirmOperationCompleted(object arg) {
            if ((this.taskRecevieConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskRecevieConfirmCompleted(this, new taskRecevieConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskRollbackReturn")]
        public string taskRollback(string xtbh, string swbh, string swlx) {
            object[] results = this.Invoke("taskRollback", new object[] {
                        xtbh,
                        swbh,
                        swlx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskRollbackAsync(string xtbh, string swbh, string swlx) {
            this.taskRollbackAsync(xtbh, swbh, swlx, null);
        }
        
        /// <remarks/>
        public void taskRollbackAsync(string xtbh, string swbh, string swlx, object userState) {
            if ((this.taskRollbackOperationCompleted == null)) {
                this.taskRollbackOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskRollbackOperationCompleted);
            }
            this.InvokeAsync("taskRollback", new object[] {
                        xtbh,
                        swbh,
                        swlx}, this.taskRollbackOperationCompleted, userState);
        }
        
        private void OntaskRollbackOperationCompleted(object arg) {
            if ((this.taskRollbackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskRollbackCompleted(this, new taskRollbackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskBackupReturn")]
        public string taskBackup(string xtbh, string swbh, string swlx) {
            object[] results = this.Invoke("taskBackup", new object[] {
                        xtbh,
                        swbh,
                        swlx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskBackupAsync(string xtbh, string swbh, string swlx) {
            this.taskBackupAsync(xtbh, swbh, swlx, null);
        }
        
        /// <remarks/>
        public void taskBackupAsync(string xtbh, string swbh, string swlx, object userState) {
            if ((this.taskBackupOperationCompleted == null)) {
                this.taskBackupOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskBackupOperationCompleted);
            }
            this.InvokeAsync("taskBackup", new object[] {
                        xtbh,
                        swbh,
                        swlx}, this.taskBackupOperationCompleted, userState);
        }
        
        private void OntaskBackupOperationCompleted(object arg) {
            if ((this.taskBackupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskBackupCompleted(this, new taskBackupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("taskDealReturn")]
        public string taskDeal(string xtbh, string swbh, string swlx) {
            object[] results = this.Invoke("taskDeal", new object[] {
                        xtbh,
                        swbh,
                        swlx});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void taskDealAsync(string xtbh, string swbh, string swlx) {
            this.taskDealAsync(xtbh, swbh, swlx, null);
        }
        
        /// <remarks/>
        public void taskDealAsync(string xtbh, string swbh, string swlx, object userState) {
            if ((this.taskDealOperationCompleted == null)) {
                this.taskDealOperationCompleted = new System.Threading.SendOrPostCallback(this.OntaskDealOperationCompleted);
            }
            this.InvokeAsync("taskDeal", new object[] {
                        xtbh,
                        swbh,
                        swlx}, this.taskDealOperationCompleted, userState);
        }
        
        private void OntaskDealOperationCompleted(object arg) {
            if ((this.taskDealCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.taskDealCompleted(this, new taskDealCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("receiveTasksReturn")]
        public string receiveTasks(string xtbh, string startTime, string endTime) {
            object[] results = this.Invoke("receiveTasks", new object[] {
                        xtbh,
                        startTime,
                        endTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveTasksAsync(string xtbh, string startTime, string endTime) {
            this.receiveTasksAsync(xtbh, startTime, endTime, null);
        }
        
        /// <remarks/>
        public void receiveTasksAsync(string xtbh, string startTime, string endTime, object userState) {
            if ((this.receiveTasksOperationCompleted == null)) {
                this.receiveTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveTasksOperationCompleted);
            }
            this.InvokeAsync("receiveTasks", new object[] {
                        xtbh,
                        startTime,
                        endTime}, this.receiveTasksOperationCompleted, userState);
        }
        
        private void OnreceiveTasksOperationCompleted(object arg) {
            if ((this.receiveTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveTasksCompleted(this, new receiveTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("submitTaskUploadAttachmentsReturn")]
        public string submitTaskUploadAttachments(string xtbh, string xml, string fjInfo) {
            object[] results = this.Invoke("submitTaskUploadAttachments", new object[] {
                        xtbh,
                        xml,
                        fjInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitTaskUploadAttachmentsAsync(string xtbh, string xml, string fjInfo) {
            this.submitTaskUploadAttachmentsAsync(xtbh, xml, fjInfo, null);
        }
        
        /// <remarks/>
        public void submitTaskUploadAttachmentsAsync(string xtbh, string xml, string fjInfo, object userState) {
            if ((this.submitTaskUploadAttachmentsOperationCompleted == null)) {
                this.submitTaskUploadAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTaskUploadAttachmentsOperationCompleted);
            }
            this.InvokeAsync("submitTaskUploadAttachments", new object[] {
                        xtbh,
                        xml,
                        fjInfo}, this.submitTaskUploadAttachmentsOperationCompleted, userState);
        }
        
        private void OnsubmitTaskUploadAttachmentsOperationCompleted(object arg) {
            if ((this.submitTaskUploadAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTaskUploadAttachmentsCompleted(this, new submitTaskUploadAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("submitTaskReturn")]
        public string submitTask(string xtbh, string xml) {
            object[] results = this.Invoke("submitTask", new object[] {
                        xtbh,
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitTaskAsync(string xtbh, string xml) {
            this.submitTaskAsync(xtbh, xml, null);
        }
        
        /// <remarks/>
        public void submitTaskAsync(string xtbh, string xml, object userState) {
            if ((this.submitTaskOperationCompleted == null)) {
                this.submitTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTaskOperationCompleted);
            }
            this.InvokeAsync("submitTask", new object[] {
                        xtbh,
                        xml}, this.submitTaskOperationCompleted, userState);
        }
        
        private void OnsubmitTaskOperationCompleted(object arg) {
            if ((this.submitTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTaskCompleted(this, new submitTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("startWorkFlowReturn")]
        public string startWorkFlow(string xtbh, string xml) {
            object[] results = this.Invoke("startWorkFlow", new object[] {
                        xtbh,
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void startWorkFlowAsync(string xtbh, string xml) {
            this.startWorkFlowAsync(xtbh, xml, null);
        }
        
        /// <remarks/>
        public void startWorkFlowAsync(string xtbh, string xml, object userState) {
            if ((this.startWorkFlowOperationCompleted == null)) {
                this.startWorkFlowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartWorkFlowOperationCompleted);
            }
            this.InvokeAsync("startWorkFlow", new object[] {
                        xtbh,
                        xml}, this.startWorkFlowOperationCompleted, userState);
        }
        
        private void OnstartWorkFlowOperationCompleted(object arg) {
            if ((this.startWorkFlowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startWorkFlowCompleted(this, new startWorkFlowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("startWorfFlowUploadAttachmentsReturn")]
        public string startWorfFlowUploadAttachments(string xtbh, string xml, string fjInfo) {
            object[] results = this.Invoke("startWorfFlowUploadAttachments", new object[] {
                        xtbh,
                        xml,
                        fjInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void startWorfFlowUploadAttachmentsAsync(string xtbh, string xml, string fjInfo) {
            this.startWorfFlowUploadAttachmentsAsync(xtbh, xml, fjInfo, null);
        }
        
        /// <remarks/>
        public void startWorfFlowUploadAttachmentsAsync(string xtbh, string xml, string fjInfo, object userState) {
            if ((this.startWorfFlowUploadAttachmentsOperationCompleted == null)) {
                this.startWorfFlowUploadAttachmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartWorfFlowUploadAttachmentsOperationCompleted);
            }
            this.InvokeAsync("startWorfFlowUploadAttachments", new object[] {
                        xtbh,
                        xml,
                        fjInfo}, this.startWorfFlowUploadAttachmentsOperationCompleted, userState);
        }
        
        private void OnstartWorfFlowUploadAttachmentsOperationCompleted(object arg) {
            if ((this.startWorfFlowUploadAttachmentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startWorfFlowUploadAttachmentsCompleted(this, new startWorfFlowUploadAttachmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://localhost/zhbggx/services/TaskWorkflowService", ResponseNamespace="http://localhost/zhbggx/services/TaskWorkflowService")]
        [return: System.Xml.Serialization.SoapElementAttribute("startWorkflowSubmitReturn")]
        public string startWorkflowSubmit(string xtbh, string xml) {
            object[] results = this.Invoke("startWorkflowSubmit", new object[] {
                        xtbh,
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void startWorkflowSubmitAsync(string xtbh, string xml) {
            this.startWorkflowSubmitAsync(xtbh, xml, null);
        }
        
        /// <remarks/>
        public void startWorkflowSubmitAsync(string xtbh, string xml, object userState) {
            if ((this.startWorkflowSubmitOperationCompleted == null)) {
                this.startWorkflowSubmitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartWorkflowSubmitOperationCompleted);
            }
            this.InvokeAsync("startWorkflowSubmit", new object[] {
                        xtbh,
                        xml}, this.startWorkflowSubmitOperationCompleted, userState);
        }
        
        private void OnstartWorkflowSubmitOperationCompleted(object arg) {
            if ((this.startWorkflowSubmitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startWorkflowSubmitCompleted(this, new startWorkflowSubmitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void unReceiveTasksCompletedEventHandler(object sender, unReceiveTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unReceiveTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unReceiveTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskDetailCompletedEventHandler(object sender, taskDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskAttachmentsDownloadCompletedEventHandler(object sender, taskAttachmentsDownloadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskAttachmentsDownloadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskAttachmentsDownloadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskRecevieConfirmCompletedEventHandler(object sender, taskRecevieConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskRecevieConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskRecevieConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskRollbackCompletedEventHandler(object sender, taskRollbackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskRollbackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskRollbackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskBackupCompletedEventHandler(object sender, taskBackupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskBackupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskBackupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void taskDealCompletedEventHandler(object sender, taskDealCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class taskDealCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal taskDealCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void receiveTasksCompletedEventHandler(object sender, receiveTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void submitTaskUploadAttachmentsCompletedEventHandler(object sender, submitTaskUploadAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitTaskUploadAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitTaskUploadAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void submitTaskCompletedEventHandler(object sender, submitTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void startWorkFlowCompletedEventHandler(object sender, startWorkFlowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startWorkFlowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startWorkFlowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void startWorfFlowUploadAttachmentsCompletedEventHandler(object sender, startWorfFlowUploadAttachmentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startWorfFlowUploadAttachmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startWorfFlowUploadAttachmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void startWorkflowSubmitCompletedEventHandler(object sender, startWorkflowSubmitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startWorkflowSubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startWorkflowSubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591